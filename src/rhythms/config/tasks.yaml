fetch_github_activity_task:
  description: >
    Collect and categorize recent GitHub activity by:
    1. Fetching concrete GitHub data from the last 24 hours using the github_activity tool
    2. Using the EXACT output from the tool in the response
    3. Do not modify or filter the data received from the tool
    4. Return the data in the same structure as received:
       - completed_work: List of completed activities with details
       - work_in_progress: List of in-progress activities with details
       - blockers: List of blocking issues with details
  expected_output: >
    The structured JSON output from the github_activity tool containing:
    - completed_work: [{detailed activity info with commit messages, PR details, etc.}]
    - work_in_progress: [{detailed activity info with PR and issue details}]
    - blockers: [{detailed blocker info with issue details}]
    Do not modify or summarize the tool output. Return it exactly as received.
  agent: github_activity_agent

fetch_linear_activity_task:
  description: >
    Collect and categorize recent Linear activity by:
    1. Fetching concrete Linear data from the last 24 hours
    2. Categorizing only verified activities:
       - Completed issues as completed work
       - In-progress issues as work in progress
       - Blocked or on-hold issues as blockers
    3. Including direct links to all referenced items
  expected_output: >
    A structured JSON containing only verified Linear activities:
    - completed_work: [{title, url, type, timestamp}]
    - work_in_progress: [{title, url, type, status, last_updated}]
    - blockers: [{title, url, type, reason}]
  agent: linear_activity_agent

draft_standup_update_task:
  description: >
    Create a structured standup draft using GitHub data, Linear data, and memory context by:
    1. Converting the GitHub and Linear activity JSON into a clear standup format
    2. If there are previous plans or blockers in memory, check their status
       and incorporate relevant updates into today's sections
    3. Using bullet points for each item with links
    4. Marking items that need user verification with [?]
    5. Not adding any speculative content
  expected_output: >
    A markdown-formatted draft with three main sections:
    - Accomplishments: Bullet points of completed work with links
    - Blockers: List of current blocking issues
    - Plans: List of in-progress work and new plans
    Each section should only contain items from GitHub data, Linear data, or memory
  agent: draft_agent

collect_user_update_task:
  description: >
    Handle standup updates naturally and efficiently, and when needed collect user inputs using the get_slack_input tool:
    1. Present the draft clearly with:
       - Accomplishments
       - Blockers
       - Plans
    2. Ask for user feedback if it looks complete
    3. Handle user responses naturally using these two situations:
       situation 1: If the user provides updates:
         a) Clean the update to extract core information (e.g., "waiting for test computer" from "add a blocker: waiting for test computer")
         b) Add the cleaned update naturally to the appropriate section:
           - For blockers: Add as a new bullet point
           - For accomplishments: Add under relevant subsection
           - For plans: Add as a new bullet point
         c) Show the updated draft and ask for confirmation ("Does this look complete?")
         d) Wait for user response:
           - If approved, finalize with "FINAL STANDUP:" prefix
           - If more updates needed, process them and repeat
       situation 2: If the user response shows satisfaction (e.g., "looks good", "yes", "👍", "good", etc.):
         a) Create a clean final version with ONLY these sections, don't hallucinate:
            # Standup Summary
            ## Accomplishments
            [accomplishments content]
            ## Blockers
            [blockers content]
            ## Plans
            [plans content]
         b) Prefix it with "FINAL STANDUP:"
         c) Return it as final output
         d) End the conversation
    4. Important guidelines:
       - NEVER finalize without explicit user confirmation
       - Clean and integrate updates naturally (e.g., "waiting for test computer" not "add a blocker: waiting for test computer")
       - Never ignore user updates - they must be added to the draft
       - Be natural in recognizing approval (any positive response counts)
       - Never add content the user didn't provide
       - Never repeat after approval
       - Keep interaction efficient and human-like
  expected_output: >
    Must be ONE of these:
    1. On approval or satisfaction: "FINAL STANDUP:" + exact draft
    2. On updates: Modified draft (with naturally integrated user changes) + "Does this look complete?"
  agent: user_update_agent
  max_retries: 3
  timeout: 300
